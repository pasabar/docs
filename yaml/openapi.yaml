openapi: 3.0.3
info:
  title: Dokumen API Cloud Function GIS- OpenAPI 3.0
  description: >-
    Dokumentasi API untuk Aplikasi Pariwisata JawaBarat (Pasabar)
  termsOfService: https://github.com/pasabar
  contact:
    email: ryaasishlah123@gmail.com
  license:
    name: GCF Package
    url: https://pkg.go.dev/github.com/pasabar/pasetobackendpasabar
  version: 1.0.11
externalDocs:
  description: Swagger
  url: https://gis-ryaas.github.io
servers:
  - url: https://asia-southeast2-pasabar.cloudfunctions.net
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/pasabar/pasetobackendpasabar
  - name: superadmin
    description: SuperAdmin Account
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/pasabar/pasetobackendpasabar
  - name: data
    description: Data Untuk akses GIS
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/pasabar/pasetobackendpasabar
paths:
  /superadminLogin:
    post:
      tags:
        - SuperAdmin
      summary: SuperAdmin With Token
      description: Login Superadmin
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/superadmin"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "405":
          description: Invalid input
  /Login-Gis:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Auth"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "405":
          description: Invalid input
  /update-geo:
    put:
      tags:
        - data
      summary: Update data geo
      description: Update data nama by volume geo
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bodycord"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "405":
          description: Invalid input
      security:
        - Login:
            - write:apiKey
            - read:apiKey

  /getall-geojson:
    get:
      tags:
        - data
      summary: Get Data Geojson
      description: Header auth
      operationId: GetdataGeojson
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/responseUser"
        "400":
          description: Invalid status value
      security:
        - Login:
            - write:apiKey
            - read:apiKey

components:
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example: pasabaradmin
        password:
          type: string
          example: pasabar
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Selamat Datang admin
    responseUser:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang Pasabar
        token:
          type: string
          example: pasabar
        data:
          type: object
          properties:
            username:
              type: string
              example: iyas
            password:
              type: string
              example: hashed password
            role:
              type: string
              example: user
    Auth:
      type: object
      properties:
        username:
          type: string
          example: iyas
        password:
          type: string
          example: iyaslodons
    bodycord:
      type: object
      properties:
        type:
          type: string
          example: polygon
        name:
          type: string
          example: iyas
        volume:
          type: string
          example: "1"
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: iyas
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Auth"
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AuthResponse"
  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header
