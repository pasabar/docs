openapi: 3.0.3
info:
  title: Dokumen API Cloud Function GIS- OpenAPI 3.0
  description: >-
    Dokumentasi API untuk Aplikasi Pariwisata JawaBarat (Pasabar)
  termsOfService: https://github.com/pasabar/swagger
  contact:
    email: 1214030@std.ulbi.ac.id
  license:
    name: GCF Package
    url: https://pkg.go.dev/github.com/pasabar/pasetobackendpasabar
  version: 0.0.8
externalDocs:
  description: Website Kami
  url: http://pasabar.my.id
servers:
  - url: https://asia-southeast2-pasabar.cloudfunctions.net
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/pasabar/pasetobackendpasabar
  - name: Admin
    description: Admin Account
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/pasabar/pasetobackendpasabar
  - name: data
    description: Data Untuk akses Pasabar
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/pasabar/pasetobackendpasabar
  - name: catalog
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/pasabar/pasetobackendpasabar
paths:
  /Admin-Login:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Auth"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "405":
          description: Invalid input

  /Update-Catalog:
    put:
      tags:
        - data
      summary: Update data catalog
      description: Update data nama by id catalog
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bodycord"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "405":
          description: Invalid input
      security:
        - Login:
            - write: apiKey
            - read: apiKey

  /Insert-Catalog:
    put:
      tags:
        - catalog
      summary: Insert data catalog
      description: Header auth for admin
      operationId: Updatedatacatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Catalog"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseCatalog"
        "400":
          description: Invalid status value
      security:
        - Login:
            - write: apiKey
            - read: apiKey

  /Delete-Catalog:
    post:
      tags:
        - catalog
      summary: Delete data catalog
      description: Header auth for admin
      operationId: InsertdataCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Catalog"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseCatalog"
        "400":
          description: Invalid status value
      security:
        - Login:
            - write: apiKey
            - read: apiKey

  /GetAll-dataCatalog:
    post:
      tags:
        - catalog
      summary: Get semua data catalog
      description: Header auth for admin only
      operationId: GetDataCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCatalog"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseCatalog"
        "400":
          description: Invalid status value
      security:
        - Login:
            - write: apiKey
            - read: apiKey

  /GetAll-CatalogID:
    get:
      tags:
        - catalog
      summary: Get data Catalog
      description: Header auth for admin
      operationId: GetDataCatalog
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Catalog"
        "400":
          description: Invalid status value
      security:
        - Login:
            - write: apiKey
            - read: apiKey

components:
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example: pasabaradmin
        password:
          type: string
          example: admin
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    responseUser:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: berhasil ambil data
        data:
          type: object
          properties:
            username:
              type: string
              example: pasabar
            password:
              type: string
              example: hashed password
            role:
              type: string
              example: admin
    Auth:
      type: object
      properties:
        username:
          type: string
          example: pasabar
        password:
          type: string
          example: admin
    bodycord:
      type: object
      properties:
        type:
          type: string
          example: garut
        name:
          type: string
          example: indah sekali
        volume:
          type: string
          example: gambar
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang Super Admin
        token:
          type: string
          example: pasabar
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Auth"
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AuthResponse"
  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header

  ResponseCatalog:
    type: object
    properties:
      Status:
        type: integer
        format: int32
      Message:
        type: string
      Data:
        $ref: "#/components/schemas/Catalog"

  Catalog:
    type: object
    properties:
      nomorid:
        type: string
      title:
        type: string
      deskripsi:
        type: string
      image:
        type: string
      status:
        type: string
