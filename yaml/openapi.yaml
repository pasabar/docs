openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumen API Cloud Function Pasabar
  termsOfService: https://pasabar.my.id/swagger/
  contact:
    email: ryaasishlah123@gmail.com
  license:
    name: pasabarbackend Package
    url1: https://pkg.go.dev/github.com/pasabar/pasabarbackend
  version: 0.1.3
externalDocs:
  description: Repo backend
  url: http://pasabar.my.id/pasabarbackend/
servers:
  - url: https://asia-southeast2-pasabar.cloudfunctions.net
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: http://pasabar.my.id/pasabarbackend/
  # - name: register
  #   description: Register Account
  #   externalDocs:
  #     description: Deskripsi dan Kode Program
  #     url: http://pasabar.my.id/pasabarbackend/
  - name: Catalog
    description: Catalog Operations
    externalDocs:
      description: Deskripsi dan Kode Program
      url: http://pasabar.my.id/pasabarbackend/
paths:
  # /registeruser:
  #   post:
  #     tags:
  #       - register
  #     summary: Register User Without Token
  #     description: Daftar Akun User
  #     operationId: authService
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/user'
  #     responses:
  #       '200':
  #         description: successful operation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Response'
  #       '405':
  #         description: Invalid input
  # /Login:
  #   post:
  #     tags:
  #       - auth
  #     summary: User Login to Get Token
  #     description: User Login and Get Token
  #     operationId: authService
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Auth'
  #     responses:
  #       '200':
  #         description: successful operation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/AuthResponse'
  #       '405':
  #         description: Invalid input
  /Admin-Login:
    post:
      tags:
        - auth
      summary: Admin Login to Get Token
      description: Admin Login and Get Token using Email and Password
      operationId: adminLoginService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAuth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /Insert-Catalog:
    post:
      tags:
        - Catalog
      summary: Insert Catalog
      description: Insert Catalog into the database
      operationId: insertCatalogService
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalog'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '405':
          description: Invalid input
  /Update-Catalog:
    put:
      tags:
        - Catalog
      summary: Update Catalog by ID
      description: Update Catalog data in the database by ID
      operationId: updateCatalogService
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      parameters:
        - name: nomorid
          in: path
          description: ID of the Catalog to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalog'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '404':
          description: Not Found - Catalog not found
        '405':
          description: Invalid input
  /GetAll-dataCatalog:
    get:
      tags:
        - Catalog
      summary: Get All Catalogs
      description: Retrieve all Catalog data from the database
      operationId: getAllCatalogService
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '405':
          description: Invalid input
  /Delete-Catalog:
    delete:
      tags:
        - Catalog
      summary: Delete Catalog by ID
      description: Delete Catalog data from the database by ID
      operationId: deleteCatalogService
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      parameters:
        - name: nomorid
          in: path
          description: ID of the Catalog to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCatalog'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '404':
          description: Not Found - Catalog not found
        '405':
          description: Invalid input

components:
  schemas:
    # user:
    #   type: object
    #   properties:
    #     username:
    #       type: string
    #       example: farhan
    #     password:
    #       type: string
    #       example: akurijik
    AdminAuth:
      type: object
      properties:
        email:
          type: string
          example: pasabar@gmail.com
        password:
          type: string
          example: hebat
    Catalog:
      type: object
      properties:
        nomorid:
          type: integer
          example: 1
        title:
          type: string
          example: cipanas nagreg
        description:
          type: string
          example: panas sekali
        image:
          type: string
          format: binary
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    responseUser:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: berhasil ambil data
        data:
          type: object
          properties:
            username:
              type: string
              example: farhan
            password:
              type: string
              example: hashed password
            role:
              type: string
              example: user
    DeleteCatalog:
      type: object
      properties:
        nomorid:
          type: integer
          example: 1
    Auth:
      type: object
      properties:
        username:
          type: string
          example: ryaas
        password:
          type: string
          example: akuishlah
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: aku admin
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    AdminAuthReq:
      description: Request Admin Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminAuth'
    CatalogReq:
      description: Request Catalog Insertion
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Catalog'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header